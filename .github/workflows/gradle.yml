# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
#
#    - name: Setup MySQL
#      uses: samin/mysql-action@v1
#      with:
#        character set server: 'utf8'
#        mysql database: 'BBdb'
#        mysql user: 'root'
#        mysql password: 'root'
##
#    - name: Build with Gradle
#      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
#      with:
#        arguments: build
#

    - name: Build with Gradle
      run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test

    - name: Build MySQL 8.0 Docker Image
      run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_TOKEN }}        
          docker build -f Docker/Mysql/Dockerfile -t yisc/mysql-8.0 .
          docker push yisc/mysql-8.0


    - name: Delete existing Docker image
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_TOKEN }}
        docker stop demo 2   
        docker rm demo 2     
        docker rmi yisc/springboot     

    # 기존 Docker image 삭제하고 다시 Load
    - name: Docker build & push to docker repo
      run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_TOKEN }}
          docker build -f Docker/Springboot/Dockerfile -t yisc/springboot .
          docker push yisc/springboot

    - name: Deploy to prod
      uses: appleboy/ssh-action@master
      id: deploy-prod
      if: contains(github.ref, 'main')
      with:
        host: ${{ secrets.HOST_PROD }}
        username: ec2-user
        key: ${{ secrets.PRIVATE_KEY }}
        envs: GITHUB_SHA
        script: |
          sudo docker rm -f $(docker ps -qa)
          sudo docker pull yisc/springboot
          docker-compose up -d
          docker image prune -f